[{"F:\\Sajib\\blood-bank\\src\\index.js":"1","F:\\Sajib\\blood-bank\\src\\App.js":"2","F:\\Sajib\\blood-bank\\src\\reportWebVitals.js":"3","F:\\Sajib\\blood-bank\\src\\Components\\Login\\Login.js":"4","F:\\Sajib\\blood-bank\\src\\Components\\Login\\PrivateRoute.js":"5","F:\\Sajib\\blood-bank\\src\\Components\\Home\\Home.js":"6","F:\\Sajib\\blood-bank\\src\\Components\\Dashboard\\Dashboard\\Dashboard.js":"7","F:\\Sajib\\blood-bank\\src\\Components\\Login\\firebase.config.js":"8","F:\\Sajib\\blood-bank\\src\\Components\\Login\\LoginManager.js":"9","F:\\Sajib\\blood-bank\\src\\Components\\Home\\Main.js":"10","F:\\Sajib\\blood-bank\\src\\Components\\Home\\Navbar.js":"11","F:\\Sajib\\blood-bank\\src\\Components\\fakeData\\AdminData.js":"12","F:\\Sajib\\blood-bank\\src\\Components\\Dashboard\\Blood\\BloodRequistUser.js":"13","F:\\Sajib\\blood-bank\\src\\Components\\Dashboard\\Blood\\BloodDonationUser.js":"14","F:\\Sajib\\blood-bank\\src\\Components\\Admin\\DateForDonation.js":"15","F:\\Sajib\\blood-bank\\src\\Components\\Admin\\AllDonorList.js":"16","F:\\Sajib\\blood-bank\\src\\Components\\Admin\\AllBloodRequisitor.js":"17"},{"size":517,"mtime":1611463138941,"results":"18","hashOfConfig":"19"},{"size":1016,"mtime":1611463138929,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1611463138942,"results":"21","hashOfConfig":"19"},{"size":6557,"mtime":1611468473214,"results":"22","hashOfConfig":"19"},{"size":1196,"mtime":1611463138939,"results":"23","hashOfConfig":"19"},{"size":235,"mtime":1611463138932,"results":"24","hashOfConfig":"19"},{"size":5958,"mtime":1611489111325,"results":"25","hashOfConfig":"19"},{"size":347,"mtime":1611463138940,"results":"26","hashOfConfig":"19"},{"size":4173,"mtime":1611489522161,"results":"27","hashOfConfig":"19"},{"size":2037,"mtime":1611463138933,"results":"28","hashOfConfig":"19"},{"size":1407,"mtime":1611463138933,"results":"29","hashOfConfig":"19"},{"size":195,"mtime":1611463138940,"results":"30","hashOfConfig":"19"},{"size":7823,"mtime":1611463138931,"results":"31","hashOfConfig":"19"},{"size":9458,"mtime":1611490245886,"results":"32","hashOfConfig":"19"},{"size":4593,"mtime":1611489439969,"results":"33","hashOfConfig":"19"},{"size":2348,"mtime":1611489294272,"results":"34","hashOfConfig":"19"},{"size":2519,"mtime":1611489300931,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"5esn9m",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"F:\\Sajib\\blood-bank\\src\\index.js",[],["81","82"],"F:\\Sajib\\blood-bank\\src\\App.js",["83"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { createContext, useState } from 'react';\r\nimport Login from './Components/Login/Login';\r\nimport Home from './Components/Home/Home';\r\nimport PrivateRoute from './Components/Login/PrivateRoute';\r\nimport Dashboard from './Components/Dashboard/Dashboard/Dashboard';\r\n\r\nexport const UserContext = createContext();\r\n\r\nfunction App() {\r\n  const [loggedInUser, setLoggedInUser] = useState({});\r\n  return (\r\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login></Login>\r\n          </Route>\r\n          <PrivateRoute path=\"/dashboard\">\r\n            <Dashboard></Dashboard>\r\n          </PrivateRoute>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\Sajib\\blood-bank\\src\\reportWebVitals.js",[],"F:\\Sajib\\blood-bank\\src\\Components\\Login\\Login.js",["84","85"],"import React, { useContext, useState } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport LoginBg from '../Image/Login/background.png';\r\nimport { createUserWithEmailAndPassword, handleGoogleSignIn, initializeLoginFramework, signInWithEmailAndPassword, handleFbSignIn } from './LoginManager';\r\nimport { UserContext } from '../../App';\r\nimport googleimage from \"../Image/Login/google-icon.png\";\r\nimport fbimage from \"../Image/Login/fb.png\";\r\nimport './Login.css';\r\nimport logo from '../Image/logo.jpg';\r\n\r\n\r\nconst Login = () => {\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        photo: ''\r\n    });\r\n\r\n\r\n    initializeLoginFramework();\r\n\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const { from } = location.state || { from: { pathname: \"/dashboard\" } };\r\n\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    const googleSignIn = () => {\r\n        handleGoogleSignIn()\r\n            .then(res => {\r\n                handleResponse(res, true);\r\n            })\r\n    }\r\n\r\n    const fbSignIn = () => {\r\n        handleFbSignIn()\r\n            .then(res => {\r\n                handleResponse(res, true);\r\n            })\r\n    }\r\n\r\n    const handleResponse = (res, redirect) => {\r\n        setUser(res);\r\n        setLoggedInUser(res);\r\n        if (redirect) {\r\n            history.replace(from);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        let isFieldValid = true;\r\n        if (e.target.name === 'email') {\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n        }\r\n        if (e.target.name === 'password') {\r\n            const isPasswordValid = e.target.value.length > 6;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n            isFieldValid = isPasswordValid && passwordHasNumber;\r\n            console.log(isPasswordValid && passwordHasNumber);\r\n        }\r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user };\r\n            console.log(user);\r\n            newUserInfo[e.target.name] = e.target.value;\r\n            setUser(newUserInfo);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (newUser && user.email && user.password) {\r\n            createUserWithEmailAndPassword(user.name, user.email, user.password)\r\n                .then(res => {\r\n                    // handleResponse(res, true);\r\n                    setUser(res);\r\n                    setLoggedInUser(res);\r\n\r\n                })\r\n        }\r\n        if (!newUser && user.email && user.password) {\r\n            signInWithEmailAndPassword(user.email, user.password)\r\n                .then(res => {\r\n                    handleResponse(res, true);\r\n                    // setUser(res);\r\n                    // setLoggedInUser(res);\r\n                    // history.replace(from);\r\n                })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\" style={{ height: \"100vh\" }}>\r\n                <div className=\"col-md-10\">\r\n                    <div className=\"border\" >\r\n                        <div>\r\n                            <Link to=\"/\">\r\n                                <img src={logo} style={{ width: 50, height: 50 }} alt=\"logo\" />\r\n                            </Link>\r\n                        </div>\r\n                        <h4>Login</h4>\r\n                        <form onSubmit={handleSubmit}>\r\n                            {newUser && <input type=\"text\" className=\"inputBox\" name=\"name\" onBlur={handleBlur} placeholder=\"Your Name\" />}\r\n                            <br />\r\n                            <input type=\"text\" name=\"email\" className=\"inputBox\" onBlur={handleBlur} placeholder=\"Your Email address\" required />\r\n                            <br />\r\n                            <input type=\"password\" name=\"password\" className=\"inputBox\" onBlur={handleBlur} placeholder=\"Password\" required />\r\n                            <br />\r\n\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <div><input type=\"checkbox\" name=\"userRemember\" id=\"\" />\r\n                                    <label htmlFor=\"userRemember\">Remember me</label></div>\r\n                                <a href=\"#\">Forget Password</a>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"submitBox\" value={newUser ? 'Sign Up' : 'Sign In'} />\r\n                        </form>\r\n                        <p style={{ color: 'red' }}>{user.error}</p>\r\n                        {user.success && <p style={{ color: 'green' }}>User {newUser ? 'created' : 'Logged In'} successfully</p>}\r\n\r\n                        <p className=\"no-account-text text-center\">\r\n                            Don't have an account?\r\n                        <span\r\n                                onClick={() => window.open(\"https://rb.gy/eibnw4\", \"_blank\")}\r\n                                className=\"create-account-link text-primary\"\r\n                            >\r\n                                Create an Google account\r\n                        </span>\r\n                        </p>\r\n\r\n                        <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\" />\r\n                        <label htmlFor=\"newUser\">New User Sign up</label><br></br>\r\n                        <div className=\"d-flex justify-content-around mb-2\">\r\n                            <button onClick={googleSignIn} className=\"button\"><img src={googleimage} style={{ width: 20, height: 20 }} alt=\"\" />Continue with Google</button>\r\n                            <button onClick={fbSignIn} className=\"button\"><img src={fbimage} style={{ width: 20, height: 20 }} alt=\"\" />Continue with Facebook</button>\r\n                            <br></br>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-2 d-none d-md-block align-self-end\">\r\n                    <img className=\"img-fluid\" src={LoginBg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","F:\\Sajib\\blood-bank\\src\\Components\\Login\\PrivateRoute.js",["86","87","88"],"import React, { useEffect, useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    \r\n    const isLoggedIn = () => {\r\n      const token = sessionStorage.getItem('token');\r\n      if(!token){\r\n        return false;\r\n      }\r\n      const decodedToken = jwt_decode(token);\r\n      \r\n      // get current time\r\n      const currentTime = new Date().getTime() / 1000;\r\n      // compare the expiration time with the current time\r\n      // will return false if expired and will return true if not expired\r\n      return decodedToken.exp > currentTime;\r\n    }\r\n    return (\r\n        <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        (loggedInUser.email || isLoggedIn()) ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","F:\\Sajib\\blood-bank\\src\\Components\\Home\\Home.js",[],"F:\\Sajib\\blood-bank\\src\\Components\\Dashboard\\Dashboard\\Dashboard.js",["89","90","91","92"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { faCalendar, faGripHorizontal, faHome, faSignOutAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Dashboard.css';\r\nimport { UserContext } from '../../../App';\r\nimport { handleSignOut } from '../../Login/LoginManager';\r\nimport { admin } from '../../fakeData/AdminData';\r\nimport BloodDonationUser from '../Blood/BloodDonationUser';\r\nimport BloodRequistUser from '../Blood/BloodRequistUser';\r\nimport DateForDonation from '../../Admin/DateForDonation'\r\nimport AllDonorList from '../../Admin/AllDonorList';\r\nimport AllBloodRequisitor from '../../Admin/AllBloodRequisitor';\r\n\r\n\r\nconst Dashboard = () => {\r\n    \r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [clickedItem, setClickedItem] = useState('donation');    \r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    useEffect(() => {\r\n        admin.map(data => {\r\n            if (data.email == loggedInUser.email) {\r\n                setIsAdmin(true);\r\n            }\r\n        })\r\n\r\n    })\r\n    const signOut = () => {\r\n        setLoggedInUser({});\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n\r\n        <section>\r\n            <div className=\"row backgroundDashboard\">\r\n                <div className=\"col-md-2\">\r\n                    <div className=\"sidebar d-flex flex-column justify-content-between col-md-2 py-5 px-4\" style={{ height: \"100vh\" }}>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <Link to=\"/dashboard\" className=\"text-white\">\r\n                                    <FontAwesomeIcon icon={faGripHorizontal} /> <span>Dashboard</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/\" className=\"text-white\">\r\n                                    <FontAwesomeIcon icon={faHome} /> <span>Home</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"text-white\">\r\n                                    <FontAwesomeIcon icon={faHome} /> <span onClick={() => setClickedItem('donation')}>Blood Donate</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"text-white\">\r\n                                    <FontAwesomeIcon icon={faHome} /> <span onClick={() => setClickedItem('requisition')}>Blood request</span>\r\n                                </Link>\r\n                            </li>\r\n\r\n                            {isAdmin && \r\n                                <div>\r\n                                    <li>\r\n                                        <Link className=\"text-white\">\r\n                                            <FontAwesomeIcon icon={faCalendar} /> <span onClick={() => setClickedItem('appointment')}>Donation / Requisting Schduling</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link className=\"text-white\">\r\n                                            <FontAwesomeIcon icon={faCalendar} /> <span onClick={() => setClickedItem('allDonor')}>All Donor list</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link className=\"text-white\">\r\n                                            <FontAwesomeIcon icon={faCalendar} /> <span onClick={() => setClickedItem('allRequisitor')}>All Blood Requisitor list</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link className=\"text-white\" >\r\n                                            <FontAwesomeIcon icon={faUserPlus} /> <span>Add Admin</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </div>}\r\n                        </ul>\r\n                        <div>\r\n                            <Link to=\"/\" className=\"text-white\"><FontAwesomeIcon icon={faSignOutAlt} /> <span onClick={signOut}>Logout</span></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-9 pl-4 pt-5\">\r\n                    <div class=\"d-flex bd-highlight mb-3\">\r\n                        <div class=\"mr-auto p-2 bd-highlight\"><h1>Welcome to Our Blood Bank</h1></div>\r\n                        <div class=\"p-2 bd-highlight\"><img src={loggedInUser.photo} width=\"50px\" height=\"auto\" alt=\"\" /></div>\r\n                        <div class=\"p-2 bd-highlight\">{loggedInUser.name}</div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {clickedItem === 'donation' && <BloodDonationUser />}\r\n                        {clickedItem === 'requisition' && <BloodRequistUser />}\r\n                        {clickedItem === 'appointment' && <DateForDonation isAdmin = {isAdmin}/>}\r\n                        {clickedItem === 'allDonor' && <AllDonorList isAdmin = {isAdmin}/>}\r\n                        {clickedItem === 'allRequisitor' && <AllBloodRequisitor isAdmin = {isAdmin}/>}\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","F:\\Sajib\\blood-bank\\src\\Components\\Login\\firebase.config.js",[],"F:\\Sajib\\blood-bank\\src\\Components\\Login\\LoginManager.js",["93","94","95"],"import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\nexport const initializeLoginFramework = () => {\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n        .then(res => {\r\n            const { displayName, photoURL, email } = res.user\r\n            const signInUser = {\r\n                isSignedIn: true,\r\n                name: displayName,\r\n                photo: photoURL,\r\n                success: true,\r\n                email: email,\r\n            }\r\n            // console.log(signInUser);\r\n            setUserToken();\r\n            return signInUser;\r\n            // console.log(displayName, photoURL, email);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\nconst setUserToken = () => {\r\n    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function (idToken) {\r\n        sessionStorage.setItem('token', idToken)\r\n        // console.log(idToken)\r\n        // Send token to your backend via HTTPS\r\n        // ...\r\n    }).catch(function (error) {\r\n        // Handle error\r\n    });\r\n}\r\nexport const handleFbSignIn = () => {\r\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    return firebase.auth().signInWithPopup(fbProvider).then(function (result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        user.success = true;\r\n        return user;\r\n\r\n    }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n    });\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(res => {\r\n            const signedOutUser = {\r\n                isSignedIn: false,\r\n                name: '',\r\n                photo: '',\r\n                email: '',\r\n                error: '',\r\n                success: false,\r\n\r\n            }\r\n            return signedOutUser\r\n\r\n        }).catch(err => {\r\n\r\n        });\r\n}\r\n\r\nexport const createUserWithEmailAndPassword = (name, email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            const newUserInfo = res.user;\r\n            newUserInfo.error = '';\r\n            newUserInfo.success = true;\r\n            updateUserName(name);\r\n            return newUserInfo;\r\n        })\r\n\r\n        .catch(error => {\r\n            // Handle Errors here.\r\n            const newUserInfo = {};\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            console.log(error)\r\n            return newUserInfo;\r\n\r\n        });\r\n}\r\n\r\nexport const signInWithEmailAndPassword = (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            const newUserInfo = res.user;\r\n            newUserInfo.error = '';\r\n            newUserInfo.success = true;\r\n            return newUserInfo;\r\n            //   console.log('Signing in user info', res.user)\r\n        })\r\n\r\n        .catch(function (error) {\r\n            // Handle Errors here.\r\n            const newUserInfo = {};\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            return newUserInfo;\r\n        });\r\n}\r\n\r\nconst updateUserName = name => {\r\n    const user = firebase.auth().currentUser;\r\n    user.updateProfile({\r\n        displayName: name\r\n    }).then(function () {\r\n        // Update successful.\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n}","F:\\Sajib\\blood-bank\\src\\Components\\Home\\Main.js",["96","97"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport image1 from '../Image/HomeBackground/1.jpg';\r\nimport image2 from '../Image/HomeBackground/2.jpg';\r\nimport image3 from '../Image/HomeBackground/3.jpg';\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n            <ol class=\"carousel-indicators\">\r\n                <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" class=\"active\"></li>\r\n                <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\"></li>\r\n                <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\"></li>\r\n            </ol>\r\n            <div class=\"carousel-inner\">\r\n                <div class=\"carousel-item active\">\r\n                    <img src={image1} style={{ width:'300px', height:'450px'}} class=\"d-block w-100\" alt=\"...\" />\r\n                </div>\r\n                <div class=\"carousel-item\">\r\n                    <img src={image2} style={{ width:'300px', height:'450px'}} class=\"d-block w-100\" alt=\"...\" />\r\n                </div>\r\n                <div class=\"carousel-item\">\r\n                    <img src={image3} style={{ width:'250px', height:'450px'}} class=\"d-block\" alt=\"...\" />\r\n                </div>\r\n            </div>\r\n            <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"visually-hidden\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"visually-hidden\">Next</span>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","F:\\Sajib\\blood-bank\\src\\Components\\Home\\Navbar.js",["98","99","100"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../Image/logo.jpg'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n           \r\n            <img src={logo} width={40} height={40} alt=\"...\" />  \r\n\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\">Contact Us</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\">About</a>\r\n                    </li>\r\n\r\n                </ul>\r\n                <Link to=\"/dashboard\"><button class=\"btn btn-outline-success my-2 my-sm-0\">Login</button></Link>\r\n                \r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","F:\\Sajib\\blood-bank\\src\\Components\\fakeData\\AdminData.js",[],"F:\\Sajib\\blood-bank\\src\\Components\\Dashboard\\Blood\\BloodRequistUser.js",[],"F:\\Sajib\\blood-bank\\src\\Components\\Dashboard\\Blood\\BloodDonationUser.js",["101"],"F:\\Sajib\\blood-bank\\src\\Components\\Admin\\DateForDonation.js",["102","103","104"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DateForDonation = ({ isAdmin }) => {\r\n    const [donors, setDonors] = useState([]);\r\n    const [status, setStatus] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    \r\n    const onSubmit = data => {\r\n        console.log(data.mobileNumber)\r\n        const mobileNumber = data.mobileNumber;\r\n        fetch(`https://gentle-dawn-31487.herokuapp.com/donor/${mobileNumber}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: { isAdmin }\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setDonors(data)\r\n                setStatus(true)\r\n            })\r\n    }\r\n    const handleChange = (id, e) => {\r\n        const date = e.target.value\r\n        const data = { date: date }\r\n        console.log(data)\r\n        fetch(`https://gentle-dawn-31487.herokuapp.com/donor/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result) {\r\n                    console.log(result)\r\n                    alert('Status Updated successfully'); \r\n                    onSubmit(result)                   \r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <div>            \r\n            {status ? <div><h4>Fixing appointment date for Blood donation</h4>\r\n                <table className=\"table table-borderless\" style={{ backgroundColor: \"#F4FDFB\" }}>                    \r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-secondary text-left\" scope=\"col\">Sr No</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">Name</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">Email ID</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">Mobile No</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">Address</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">physcical Condition</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">Appointment Date</th>\r\n                            <th className=\"text-secondary\" scope=\"col\">Date Change/fixed</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            donors.map((donor, index) =>\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{donor.name}</td>\r\n                                    <td>{donor.email}</td>\r\n                                    <td>{donor.mobileNumber}</td>\r\n                                    <td>{\"Thana:\" + donor.policeStation + \", District:\" + donor.district}</td>\r\n                                    <td>{\"Weight:\" + donor.weight + \"Gender:\" + donor.gender}</td>\r\n                                    <td>{donor.date}</td>\r\n                                    <td>\r\n                                        <form onChange={(e) => handleChange(donor._id, e)}>\r\n                                            <input type=\"date\" name=\"date\" value=\"\" placeholder=\"Appointment schdule\" className=\"form-control\" />\r\n                                        </form>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table> \r\n                </div>:\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <h4>Enter Donor's mobile Number</h4><br></br>\r\n                    <input name=\"mobileNumber\" className=\"col-6 form-control input-lg mb-2\" placeholder=\"Enter Donor's mobile number during registration\" ref={register({ required: true })} />\r\n                    {/* errors will return when field validation fails  */}\r\n                    {errors.mobileNumber && <span>This field is required</span>}\r\n                    <input type=\"submit\" className=\"form-control input-lg col-2 btn-outline-success\" />\r\n                </form>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateForDonation;","F:\\Sajib\\blood-bank\\src\\Components\\Admin\\AllDonorList.js",["105"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst AllDonorList = ({ isAdmin}) => {\r\n    const [donors, setDonors] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://gentle-dawn-31487.herokuapp.com/donor', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                 authorization: {isAdmin}\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setDonors(data)\r\n            }\r\n                )\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <h3>List of all Blood Donor's</h3>\r\n            <table className=\"table table-borderless\" style={{ backgroundColor: \"#F4FDFB\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-secondary text-left\" scope=\"col\">Sr No</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Name</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Email ID</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Mobile No</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Address</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">physcical Condition</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Appointment Date</th>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        donors.map((donor, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{donor.name}</td>\r\n                                <td>{donor.email}</td>\r\n                                <td>{donor.mobileNumber}</td>\r\n                                <td>{\"Thana:\" + donor.policeStation + \", District:\" + donor.district}</td>\r\n                                <td>{\"Weight:\" + donor.weight + \"Gender:\" + donor.gender}</td>\r\n                                <td>{donor.date}</td>                                \r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllDonorList;","F:\\Sajib\\blood-bank\\src\\Components\\Admin\\AllBloodRequisitor.js",["106"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst AllBloodRequisitor = ({isAdmin}) => {\r\n    const [bloodRequisition, setBloodRequisition] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://gentle-dawn-31487.herokuapp.com/request', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                 authorization: {isAdmin}\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setBloodRequisition(data)\r\n            }\r\n                )\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <h3>List of all Blood requisitions</h3>\r\n            <table className=\"table table-borderless\" style={{ backgroundColor: \"#F4FDFB\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-secondary text-left\" scope=\"col\">Sr No</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Name</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Email ID</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Mobile No</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Address</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">physcical Condition</th>\r\n                        <th className=\"text-secondary\" scope=\"col\">Requirement Date</th>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        bloodRequisition.map((bloodRequisition, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{bloodRequisition.name}</td>\r\n                                <td>{bloodRequisition.email}</td>\r\n                                <td>{bloodRequisition.mobileNumber}</td>\r\n                                <td>{\"Thana:\" + bloodRequisition.policeStation + \", District:\" + bloodRequisition.district}</td>\r\n                                <td>{\"Weight:\" + bloodRequisition.weight + \"Gender:\" + bloodRequisition.gender}</td>\r\n                                <td>{bloodRequisition.dateForRequirement}</td>                                \r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllBloodRequisitor;",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":12},{"ruleId":"111","severity":1,"message":"115","line":30,"column":12,"nodeType":"113","messageId":"114","endLine":30,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":127,"column":33,"nodeType":"118","endLine":127,"endColumn":45},{"ruleId":"111","severity":1,"message":"119","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"120","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"121","line":9,"column":26,"nodeType":"113","messageId":"114","endLine":9,"endColumn":41},{"ruleId":"111","severity":1,"message":"122","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":23},{"ruleId":"111","severity":1,"message":"123","line":23,"column":13,"nodeType":"113","messageId":"114","endLine":23,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":26,"column":24,"nodeType":"126","messageId":"127","endLine":26,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":27,"column":28,"nodeType":"130","messageId":"131","endLine":27,"endColumn":30},{"ruleId":"111","severity":1,"message":"132","line":45,"column":13,"nodeType":"113","messageId":"114","endLine":45,"endColumn":18},{"ruleId":"111","severity":1,"message":"133","line":57,"column":13,"nodeType":"113","messageId":"114","endLine":57,"endColumn":18},{"ruleId":"111","severity":1,"message":"134","line":59,"column":13,"nodeType":"113","messageId":"114","endLine":59,"endColumn":23},{"ruleId":"111","severity":1,"message":"135","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"136","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":17,"column":25,"nodeType":"118","endLine":17,"endColumn":54},{"ruleId":"116","severity":1,"message":"117","line":20,"column":25,"nodeType":"118","endLine":20,"endColumn":54},{"ruleId":"116","severity":1,"message":"117","line":23,"column":25,"nodeType":"118","endLine":23,"endColumn":54},{"ruleId":"124","severity":1,"message":"125","line":20,"column":35,"nodeType":"126","messageId":"127","endLine":20,"endColumn":37},{"ruleId":"111","severity":1,"message":"119","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"137","line":8,"column":11,"nodeType":"113","messageId":"114","endLine":8,"endColumn":18},{"ruleId":"111","severity":1,"message":"138","line":10,"column":37,"nodeType":"113","messageId":"114","endLine":10,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":19,"column":8,"nodeType":"141","endLine":19,"endColumn":10,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"140","line":19,"column":8,"nodeType":"141","endLine":19,"endColumn":10,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loggedInUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'setLoggedInUser' is assigned a value but never used.","'handleSignOut' is defined but never used.","'from' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'history' is assigned a value but never used.","'watch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.","ArrayExpression",["146"],["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},"Update the dependencies array to be: [isAdmin]",{"range":"151","text":"152"},{"range":"153","text":"152"},[584,586],"[isAdmin]",[621,623]]